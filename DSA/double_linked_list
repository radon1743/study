from colorama import Fore,Style

class Node():
    def __init__(self,value):
        self.prev = None 
        self.value = value 
        self.next = None 

class Dllist:
    def __init__(self):
        self.head = None
    
    def insert_first(self,value):
        
        current_head = self.head
        new_node = Node(value)
        new_node.next = current_head
        if current_head is not None:
            self.head.prev = new_node
        self.head = new_node

    def insert_last(self, value):
        current_head = self.head
        while current_head.next:
            current_head = current_head.next
        if current_head.next is None:
            new_node = Node(value)
            current_head.next = new_node
            new_node.prev = current_head

    def insert_before(self, index,value):
        current_head = self.head
        
        if index==0:
            self.insert_first(value)
        else:
            position = 1
            while current_head.next and position!=index:
                current_head = current_head.next
                position+=1
            new_node = Node(value)

            prev = current_head.prev
            
            new_node.prev = prev
            new_node.next = current_head
            
            if prev:
                prev.next = new_node
    
            current_head.prev = new_node
            
    def insert_after(self, index,value):
        current_head = self.head
        position = 0
        while position!=index and current_head.next is not None:
            position+=1
            current_head = current_head.next
        new_node = Node(value)
        
        next = current_head.next
        new_node.next = next
        new_node.prev = current_head

        if next :
            next.prev = new_node
        current_head.next = new_node 

    def insert_loc(self,value,index):
        current_head = self.head

    def delete_first(self):
        current_head = self.head
        current_head.next.prev = None
        self.head = current_head.next     
        
    def delete_last(self):
        current_head = self.head
        while current_head.next.next:
            current_head = current_head.next
        current_head.next = None

    def delete_node(self,index):
        current_head = self.head
        if(index==0):
            self.delete_first()
            return
        position = 1
        current_head = current_head.next
        while current_head.next is not None and index!=position:
            current_head = current_head.next  
            position+=1
        print(current_head.value)
        # next = current_head.next
        prev = current_head.next.prev
        # if (next is not None):
            # next.prev = prev
            # prev.next = next 
        print( prev.value)

    def print_dl(self):

        current_head = self.head
        double_arrow = " <--> "
        head_space = (len(double_arrow) + len("None"))*" " 
        print()
        print(head_space + Fore.GREEN+"H")
        print(head_space + "â†“")
        print(Style.RESET_ALL, end="")
        print(Fore.RED+"None", end = Style.RESET_ALL+double_arrow)
        while current_head.next:
            print(current_head.value, end=double_arrow)
            current_head = current_head.next
        print(current_head.value, end= double_arrow + Fore.RED+"None\n")
        print()
        print(Style.RESET_ALL, end="")


dllist = Dllist()
dllist.insert_first("a")
dllist.insert_first("b")
dllist.insert_first("c")
dllist.insert_first("d")
dllist.print_dl()


dllist.insert_last("m")
dllist.print_dl()
    
dllist.insert_before(6,"o")
dllist.print_dl()

dllist.insert_after(4,"s")
dllist.print_dl()

# dllist.delete_first()
# dllist.print_dl()

# dllist.delete_last()
# dllist.print_dl()

# dllist.delete_node(2)
# dllist.print_dl()

# dllist.delete_node(3)
# dllist.print_dl()